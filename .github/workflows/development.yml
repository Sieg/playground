name: Development

on:
  workflow_dispatch:
  workflow_call:

jobs:
  first:
    runs-on: ubuntu-latest
    steps:
      - name: Do something
        run: |
          echo "hello!"

  second:
    runs-on: ubuntu-latest
    steps:
      - name: Do fail
        run: exit 1

  notify_slack:
    runs-on: ubuntu-latest
    needs: [ first, second ]
    if: always() && (github.event_name == 'workflow_dispatch' || github.event_name == 'schedule')
    steps:
      - name: Send custom JSON data to Slack workflow
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # "needs" context used to access the state of related jobs
          # "github" context used to access workflow its trigger information
          # Warning: Payload is JSON format given through Yaml. Be careful with new lines and do not make it NICE looking, it will not work here ;)
          # Help: New lines can be easily added for texts bellow. Check how it's currently implemented in this example!
          payload: >
            {"text": "
            ${{ github.event_name == 'workflow_dispatch' && 'Manual' || 'Scheduled' }} ${{ github.workflow }} workflow on ${{ github.repository }}
            ${{ (needs.first.result=='success' && needs.second.result=='success') && 'Successful' || 'Failed' }}
            ", "blocks": [{"type": "header","text": {"type": "plain_text", "emoji": true, "text": "
            ${{ github.event_name == 'workflow_dispatch' && 'Manual' || 'Scheduled' }} ${{ github.workflow }} workflow on ${{ github.repository }}
            "}},{"type": "section","fields": [{"type": "mrkdwn","text": "
            *Status:* ${{ (needs.first.result=='success' && needs.second.result=='success') && ':heavy_check_mark:' || ':x:' }}
            "},{"type": "mrkdwn","text": "
            Repository: <${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>
            "}]},{"type": "section", "text": {"type": "mrkdwn", "text": "
            \n* First job ${{ (needs.first.result=='success') && ':heavy_check_mark:' || ':x:' }} 
            \n* Second job ${{ (needs.second.result=='success') && ':heavy_check_mark:' || ':x:' }}
            "}}, {"type": "divider"}]}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK