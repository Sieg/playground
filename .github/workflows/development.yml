name: Development

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:

env:
  MODULE_NAME: 'Playground'

jobs:
  first_job:
    runs-on: ubuntu-latest
    id: first
    steps:
      - name: Do something
        run: |
          echo "hello!"

  second_job:
    runs-on: ubuntu-latest
    id: second
    steps:
      - name: Do fail
        run: exit 1

  notify_slack:
    runs-on: ubuntu-latest
    needs: [ first_job ]
    steps:
      - name: Send custom JSON data to Slack workflow
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: >
            {"blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "${{ github.event_name == 'workflow_dispatch' && 'Manual' || 'Scheduled' }} ${{ github.workflow }} on ${{ github.repository }}",
                  "emoji": true
                }
              },    
              {
                "type": "section",
                "fields": [
                    {
                        "type": "mrkdwn",
                        "text": "*Status:* ${{ (jobs.first.result=='success' && jobs.second.result=='success') && ':white_check_mark:' || ':x:' }}"
                    },
                    {
                        "type": "mrkdwn",
                        "text": "Repository: <${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>"
                    }
                ]
                "text": {
                  "type": "mrkdwn",
                  "text": "Repository: <${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "```\n* First job ${{ (jobs.first.result=='success') && ':white_check_mark:' || ':x:' }} \n* Second job ${{ (jobs.second.result=='success') && ':white_check_mark:' || ':x:' }}```"
                }
              }
            ]}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK